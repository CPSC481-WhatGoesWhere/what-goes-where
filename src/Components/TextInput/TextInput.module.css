

/* TextInput.module.css */


/* 
  Here is some information on how to use css for components:

    - The css class ".exemple {}" is an exemple.
      If it were to be used it would have to be used in 
      a manner like so "<div className={styles.exemple}>".

    - You can set-up and use global variables, the variables
      can be found in the @/pages/Layout/Layout.module.css 
      in the ":global(:root) {...}" class. You may add more 
      variables there, but remeber that changing them will 
      alter things globally.

    - Given that this is a Component rather than a Page, this 
      css stylesheet is expected to hold all (or most) of the 
      css classes nessecary for the component.

    - In the event that this Component has many subcomponents, 
      you may chose to hold the css classes for the subcomponents 
      in this css stylesheet or to have their own css stylesheets.
      This is dependent on how many classes and how complicated 
      they are. Do whatever will have the clearest outcome to an 
      outsider trying to read this code.
 */


.textInputContainer {
  background-color: var(--color-background-primary);
  display: flex;
  flex: 1;
  width: 100%;
  align-items: center;
  justify-content: center;
  border: var(--border-none);
  padding: var(--spacing-none);
}

.input{
  font-family: var(--font-family-base);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-normal);
  color: var(--color-text);
  background-color: var(--color-background-primary);
  flex: 1;
  align-items: center;
  justify-content: center;
  border: var(--border-solid-sm);
  border-radius: var(--border-radius-sm);
  padding: var(--spacing-xs);
  transition: 
    border-color 0.3s ease, 
    color 0.3s ease, 
    transform 0.1s linear,
    box-shadow 0.1s linear,
    background-color 0.3s ease ;
  ;
  outline: none; /* Disable default focus outline */
  box-shadow: var(--box-shadow);

}

/* Placeholder styling */
.input::placeholder {
  color: var(--color-text);
  opacity: 0.7;
  font-style: italic;
}

/* Hover, active, and focus states */
.input:hover,
.input:active,
.input:focus {
  border-color: var(--color-primary);
  transform: scale(1.02); 
}

/* Disabled state */
.input:disabled {
  cursor: not-allowed;
  transform: scale(1); 
  opacity: 0.6;
}

/* Optional error state, if you add an "error" class */
.input.error {
  border-color: var(--color-accent);
}
